// File: ApiClient.kt

package com.example.eco.api

import android.content.Context
import ApiService
import BonusApi
import com.example.eco.AuthInterceptor
import com.example.eco.api.service.AuthService
import com.example.eco.api.service.RegistrationService
import com.example.eco.api.service.UserService
import okhttp3.OkHttpClient
import okhttp3.logging.HttpLoggingInterceptor
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import java.util.concurrent.TimeUnit

object ApiClient {

    // üîó –ë–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
    private const val BASE_URL = "http://10.0.2.2:8080" // –¥–ª—è —ç–º—É–ª—è—Ç–æ—Ä–∞ Android

    private var appContext: Context? = null

    fun init(context: Context) {
        appContext = context.applicationContext
    }

    // üß™ –õ–æ–≥–≥–µ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
    private val loggingInterceptor by lazy {
        HttpLoggingInterceptor().apply {
            level = HttpLoggingInterceptor.Level.BODY
        }
    }

    // üîê –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    private val authInterceptor by lazy {
        AuthInterceptor(appContext ?: throw IllegalStateException("Context –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"))
    }

    // ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π OkHttpClient —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    private val okHttpClient by lazy {
        OkHttpClient.Builder()
            .connectTimeout(30, TimeUnit.SECONDS)
            .readTimeout(30, TimeUnit.SECONDS)
            .writeTimeout(30, TimeUnit.SECONDS)
            .addInterceptor(loggingInterceptor)
            .addInterceptor(authInterceptor)
            .build()
    }

    // üõ† –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Retrofit —Å–µ—Ä–≤–∏—Å–æ–≤
    private fun <T> createService(serviceClass: Class<T>): T {
        return Retrofit.Builder()
            .baseUrl(BASE_URL)
            .client(okHttpClient)
            .addConverterFactory(GsonConverterFactory.create())
            .build()
            .create(serviceClass)
    }

    // üßæ API-—Å–µ—Ä–≤–∏—Å—ã
    val authService: AuthService by lazy {
        createService(AuthService::class.java)
    }

    val registrationService: RegistrationService by lazy {
        createService(RegistrationService::class.java)
    }

    val userService: UserService by lazy {
        createService(UserService::class.java)
    }

    val eventService: ApiService by lazy {
        createService(ApiService::class.java)
    }
    val bonusApi: BonusApi by lazy {
        createService(BonusApi::class.java)
    }

}